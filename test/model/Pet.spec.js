/*
 * Shelter
 * This is an animal shelter server. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: marc@start.up
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Shelter);
  }
}(this, function(expect, Shelter) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Pet', function() {
      beforeEach(function() {
        instance = new Shelter.Pet();
      });

      it('should create an instance of Pet', function() {
        // TODO: update the code to test Pet
        expect(instance).to.be.a(Shelter.Pet);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property species (base name: "species")', function() {
        // TODO: update the code to test the property species
        expect(instance).to.have.property('species');
        // expect(instance.species).to.be(expectedValueLiteral);
      });

      it('should have the property breed (base name: "breed")', function() {
        // TODO: update the code to test the property breed
        expect(instance).to.have.property('breed');
        // expect(instance.breed).to.be(expectedValueLiteral);
      });

      it('should have the property photoUrls (base name: "photoUrls")', function() {
        // TODO: update the code to test the property photoUrls
        expect(instance).to.have.property('photoUrls');
        // expect(instance.photoUrls).to.be(expectedValueLiteral);
      });

      it('should have the property history (base name: "history")', function() {
        // TODO: update the code to test the property history
        expect(instance).to.have.property('history');
        // expect(instance.history).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

    });
  });

}));
