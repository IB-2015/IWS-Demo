/*
 * Shelter
 * This is an animal shelter server. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: marc@start.up
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Event'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Event'));
  } else {
    // Browser globals (root is window)
    if (!root.Shelter) {
      root.Shelter = {};
    }
    root.Shelter.Pet = factory(root.Shelter.ApiClient, root.Shelter.Event);
  }
}(this, function(ApiClient, Event) {
  'use strict';

  /**
   * The Pet model module.
   * @module model/Pet
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Pet</code>.
   * @alias module:model/Pet
   * @class
   * @param name {String} 
   * @param photoUrls {Array.<String>} 
   */
  var exports = function(name, photoUrls) {
    this.name = name;
    this.photoUrls = photoUrls;
  };

  /**
   * Constructs a <code>Pet</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Pet} obj Optional instance to populate.
   * @return {module:model/Pet} The populated <code>Pet</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('species'))
        obj.species = ApiClient.convertToType(data['species'], 'String');
      if (data.hasOwnProperty('breed'))
        obj.breed = ApiClient.convertToType(data['breed'], 'String');
      if (data.hasOwnProperty('photoUrls'))
        obj.photoUrls = ApiClient.convertToType(data['photoUrls'], ['String']);
      if (data.hasOwnProperty('history'))
        obj.history = ApiClient.convertToType(data['history'], [Event]);
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * @member {String} species
   */
  exports.prototype.species = undefined;

  /**
   * @member {String} breed
   */
  exports.prototype.breed = undefined;

  /**
   * @member {Array.<String>} photoUrls
   */
  exports.prototype.photoUrls = undefined;

  /**
   * pet history in the shelter
   * @member {Array.<module:model/Event>} history
   */
  exports.prototype.history = undefined;

  /**
   * pet status in the shelter
   * @member {module:model/Pet.StatusEnum} status
   */
  exports.prototype.status = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "available"
     * @const
     */
    available: "available",

    /**
     * value: "pending"
     * @const
     */
    pending: "pending",

    /**
     * value: "sold"
     * @const
     */
    sold: "sold"
  };

  return exports;

}));
